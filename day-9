PF-Assgn-57

def check_prime(number):
    return number > 1 and all(number % i != 0 for i in range(2, number))
    
def rotations(num):
    rotated = []
    m = str(num)
    for i in m:
        rotated.append(int(m))
        m = m[1:] + m[0]
    return rotated

def get_circular_prime_count(limit):
    counter = 0 

    for number in range(1, limit):
        if all(check_prime(number) for number in rotations(number)): 
            counter += 1 
    return counter
#Provide different values for limit and test your program
print(get_circular_prime_count(1000))



#PF-Assgn-60
def remove_duplicates(value):
    ans=""
    c=0
    s=str(value)
    for i in range(0,len(value)):
        if(value[i]!=" "):
            if (value[i] in ans):
                continue
            else:
                ans+=value[i]
                c=1
    if(c==0):
        return -1
    return ans

print(remove_duplicates("11223445566666ababzzz@@@123#*#*"))
